name: Android CI

on:
  push:
    branches: [ "main", "master", "develop" ]
    tags:
      - "v*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

env:
  ANDROID_COMPILE_SDK: 34            # set to your compileSdk in app/build.gradle(.kts)
  ANDROID_BUILD_TOOLS: "34.0.0"      # set to your buildToolsVersion if declared
  JAVA_VERSION: "17"
  GRADLE_VERSION: "8.7"
  APP_MODULE: "app"                  # change if your module name is different

jobs:
  build-debug:
    name: Build debug APK (artifact)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK (licenses auto-accepted)
        uses: android-actions/setup-android@v3

      - name: Install required SDK platforms & build-tools
        run: |
          sdkmanager "platform-tools" "platforms;android-${{ env.ANDROID_COMPILE_SDK }}" "build-tools;${{ env.ANDROID_BUILD_TOOLS }}"

      - name: Set up Gradle ${{ env.GRADLE_VERSION }} (with caching)
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Assemble debug
        run: gradle :${{ env.APP_MODULE }}:assembleDebug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_MODULE }}-debug-apk
          path: ${{ env.APP_MODULE }}/build/outputs/apk/debug/*.apk

  release-on-tag:
    name: Create GitHub Release with APKs on tag
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK (licenses auto-accepted)
        uses: android-actions/setup-android@v3

      - name: Install required SDK platforms & build-tools
        run: |
          sdkmanager "platform-tools" "platforms;android-${{ env.ANDROID_COMPILE_SDK }}" "build-tools;${{ env.ANDROID_BUILD_TOOLS }}"

      - name: Set up Gradle ${{ env.GRADLE_VERSION }} (with caching)
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      # Optional: decode your keystore if you set KEYSTORE_* secrets (see README_CI.md)
      - name: Decode keystore (optional)
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > "${{ runner.temp }}/ci-release-keystore.jks"
          ls -l "${{ runner.temp }}/ci-release-keystore.jks"

      - name: Assemble release (signed if signing config reads env vars)
        env:
          KEYSTORE_PATH: ${{ runner.temp }}/ci-release-keystore.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_ALIAS_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
        run: |
          # Build both debug and release so your Release has something even without signing
          gradle :${{ env.APP_MODULE }}:assembleDebug :${{ env.APP_MODULE }}:assembleRelease

      - name: Upload APKs to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.APP_MODULE }}/build/outputs/apk/debug/*.apk
            ${{ env.APP_MODULE }}/build/outputs/apk/release/*.apk
          fail_on_unmatched_files: false
          generate_release_notes: true
